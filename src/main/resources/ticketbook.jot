---
# Java Observability Toolkit (JOT)

sensors:

- name: "get-ciphers"
  description: "Identifies encryption ciphers"
  methods:
  - "javax.crypto.Cipher.getInstance"
  captures:
  - "#P0"
  matchers:
  - "!null"


- name: "native-libraries"
  description: "Identifies the use of native libraries"
  methods:
  - "java.lang.System.load"
  - "java.lang.System.loadLibrary"
  - "java.lang.System.mapLibraryName"
  captures:
  - "#P0"
  matchers:
  - "!null"
  

- name: "get-unsafe-queries"
  description: "Identifies unparameterized database queries"
  methods:
  - "java.sql.Statement.execute"
  - "java.sql.Statement.addBatch"
  - "java.sql.Statement.executeQuery"
  - "java.sql.Statement.executeUpdate"
  excludes:
  - "java.sql.PreparedStatement"   #these calls are harmless in PreparedStatement
  captures:
  - "#ARGS"


- name: "get-files"
  description: "Identifies the use of Files outside certain paths"
  methods:
  - "java.io.File.<init>"
  captures:
  - "#OBJ.getCanonicalPath()"
  matchers:
  - "!\\/apache\\-tomcat"
  - "!sdkman"
  - "!eclipse\\-workspace"


- name: "get-sockets"
  description: "Identifies the use of sockets"
  methods:
  - "java.net.Socket.<init>"
  captures:
  - "\"\"+#P0+\":\"+#P1"     # using ""+#P0 is a shorthand String conversion
  debug: "true"
  matchers:
  - "!null\\:null"
  - "!\\:8080"               # any port that's not 8080


- name: "route"
  description: "Identifies the route for this HTTP request"
  methods:
  - "javax.servlet.Servlet.service"
  captures:
  - "#P0.getRequestURI()"

  
- name: "check-role"
  description: "Identifies roles"
  methods:
  - "javax.servlet.ServletRequest.isUserInRole"
  captures:
  - "#P0"
    
  
- name: "get-parameter"
  description: "Identifies parameter names referenced by the app"
  methods:
  - "javax.servlet.ServletRequest.getParameter"
  - "javax.servlet.ServletRequest.getParameterValues"
  - "javax.servlet.ServletRequest.getQueryString"
  captures:
  - "#P0 + \":\" + #RET"
  matchers:
  - "!null"
 
- name: "get-header"
  description: "Identifies parameter names referenced by the app"
  methods:
  - "javax.servlet.ServletRequest.getHeader"
  - "javax.servlet.ServletRequest.getHeaders"
  captures:
  - "#P0 + \":\" + #RET"
  matchers:
  - "!null"
 
- name: "get-header"
  description: "Identifies parameter names referenced by the app"
  methods:
  - "javax.servlet.ServletRequest.getCookies"
  captures:
  - "#P0 + \":\" + #RET"
  matchers:
  - "!null"
 
- name: "multipart"
  description: "Identifies parameter names referenced by the app"
  methods:
  - "javax.servlet.ServletRequest.getPart"
  - "javax.servlet.ServletRequest.getParts"
  captures:
  - "#P0"
  matchers:
  - "!null"


- name: "send-redirect"
  description: "Extracts any response redirects in this app"
  methods:
  - "javax.servlet.ServletResponse.sendRedirect"
  captures:
  - "#P0"
  matchers:
  - "!null"


- name: "request-forward"
  description: "Extracts any request forwards in this app"
  methods:
  - "javax.servlet.ServletRequest.getRequestDispatcher"
  - "javax.servlet.ServletContext.getRequestDispatcher"
  captures:
  - "#P0"
  matchers:
  - "!null"


- name: "set-header"
  description: "Identifies whether headers are being set"
  methods:
  - "javax.servlet.ServletResponse.setHeader"
  captures:
  - "#P0 + \":\" + #P1"
  matchers:
  - "!null"


- name: "credit-card"
  description: "Identifies PII creation"
  methods:
  - "javax.servlet.ServletRequest.getParameter"
  - "javax.servlet.ServletRequest.getParameterValues"
  scopes:
  - "javax.servlet.Servlet.service"
  captures:
  - "#P0"
  matchers:
  - "(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}"
  - "(?<visa>4[0-9]{12}(?:[0-9]{3})?)"
  - "(?<mastercard>5[1-5][0-9]{14})"
  - "(?<discover>6(?:011|5[0-9]{2})[0-9]{12})"
  - "(?<amex>3[47][0-9]{13})"
  - "(?<diners>3(?:0[0-5]|[68][0-9])?[0-9]{11})"
  - "(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11})"

- name: "native-process"
  description: "Detects attempts to start native processes"
  methods:
  - "java.lang.ProcessBuilder.<init>"
  scopes:
  - "javax.servlet.Servlet.service"
  captures:
  - "#ARGS"


- name: "expression-language"
  description: "Detects harmful methods from being used during expresssion evaluation"
  methods:
  - "javax.el.ValueExpression.getValue"
  scopes:
  - "javax.servlet.Servlet.service"
  captures:
  - "#OBJ.getExpressionString()"

